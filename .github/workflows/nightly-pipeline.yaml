name: Nightly RAPIDS Pipeline

on:
  workflow_dispatch:
  schedule:
    - cron: "0 5 * * *" # 5am UTC / 1am EST

# the static `nightly` string is needed to differentiate
# this concurrency config from similar configs that exist
# in called workflows, which causes problems
concurrency:
  group: nightly-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  get-run-info:
    uses: ./.github/workflows/get-run-info.yaml
    secrets: inherit
    with:
      rapids_version: "23.06"
      repos: >-
        rapidsai/cucim
        rapidsai/cudf
        rapidsai/cugraph
        rapidsai/cugraph-ops
        rapidsai/cuml
        rapidsai/cumlprims_mg
        rapidsai/cusignal
        rapidsai/cuspatial
        rapidsai/cuxfilter
        rapidsai/dask-cuda
        rapidsai/raft
        rapidsai/rmm
        rapidsai/ucx-py
  rmm-build:
    needs: get-run-info
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: rmm
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.rmm) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  rmm-tests:
    needs: [get-run-info, rmm-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: rmm
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.rmm) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cudf-build:
    needs: [get-run-info, rmm-build, dask-cuda-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cudf
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cudf) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cudf-tests:
    needs: [get-run-info, cudf-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cudf
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cudf) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  raft-build:
    needs: [get-run-info, rmm-build, dask-cuda-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: raft
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.raft) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  raft-tests:
    needs: [get-run-info, raft-build, ucx-py-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: raft
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.raft) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuml-build:
    needs: [get-run-info, cudf-build, raft-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuml
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuml) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuml-tests:
    needs: [get-run-info, cuml-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuml
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuml) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cugraph-build:
    needs: [get-run-info, cudf-build, raft-build, dask-cuda-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cugraph
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cugraph) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cugraph-tests:
    needs: [get-run-info, cugraph-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cugraph
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cugraph) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cusignal-build:
    needs: [get-run-info]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cusignal
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cusignal) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cusignal-tests:
    needs: [get-run-info, cusignal-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cusignal
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cusignal) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuspatial-build:
    needs: [get-run-info, cudf-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuspatial
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuspatial) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuspatial-tests:
    needs: [get-run-info, cuspatial-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuspatial
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuspatial) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuxfilter-build:
    needs: [get-run-info, cudf-build, cuspatial-build, dask-cuda-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuxfilter
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuxfilter) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cuxfilter-tests:
    needs: [get-run-info, cuxfilter-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cuxfilter
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cuxfilter) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  dask-cuda-build:
    needs: [get-run-info]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: dask-cuda
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.dask-cuda) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  dask-cuda-tests:
    needs: [get-run-info, dask-cuda-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: dask-cuda
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.dask-cuda) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  ucx-py-build:
    needs: get-run-info
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: ucx-py
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).ucx-py-branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.ucx-py) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  ucx-py-tests:
    needs: [get-run-info, ucx-py-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: ucx-py
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).ucx-py-branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.ucx-py) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cugraph-ops-build:
    needs: [get-run-info, rmm-build, raft-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cugraph-ops
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cugraph-ops) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cugraph-ops-tests:
    needs: [get-run-info, cugraph-ops-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cugraph-ops
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cugraph-ops) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cucim-build:
    needs: [get-run-info]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cucim
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cucim) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cucim-tests:
    needs: [get-run-info, cucim-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cucim
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: test.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cucim) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
  cumlprims_mg-build:
    needs: [get-run-info, raft-build]
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: rapidsai
          repo: cumlprims_mg
          github_token: ${{ secrets.WORKFLOW_TOKEN }}
          github_user: GPUtester
          workflow_file_name: build.yaml
          ref: ${{ fromJSON(needs.get-run-info.outputs.obj).branch }}
          wait_interval: 120
          client_payload: ${{ toJSON(fromJSON(needs.get-run-info.outputs.obj).payloads.cumlprims_mg) }}
          propagate_failure: false
          trigger_workflow: true
          wait_workflow: true
