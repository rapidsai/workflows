on:
  workflow_call:
    inputs:
      rapids_version:
        type: string
      repos:
        type: string
    outputs:
      obj:
        description: "A JSON object which includes the relevant information for a particular workflow run."
        value: ${{ jobs.run.outputs.obj }}

# The output object looks like this:
# {
#   "branch": "branch-22.10",
#   "ucx-py-branch": "branch-0.28",
#   "payloads": {
#     "rmm": {
#        "branch": "branch-22.10",
#        "date": "2022-09-01",
#        "sha": "8a3a552e07fa8254c54804addcab103aea89f985"
#      },
#     "cudf": {
#        "branch": "branch-22.10",
#        "date": "2022-09-01",
#        "sha": "dfd3d89392fa4710752e3067b16fa9a2edb28174"
#      },
#     "ucx-py": {
#        "branch": "branch-0.28",
#        "date": "2022-09-01",
#        "sha": "daf117ca01c37508f102666b3b4999b955a16a12"
#      }
#   }
# }

defaults:
  run:
    shell: bash

jobs:
  run:
    runs-on: ubuntu-latest
    outputs:
      obj: ${{ steps.get-obj.outputs.obj }}
    env:
      GH_TOKEN: ${{secrets.WORKFLOW_TOKEN}}
    steps:
      - name: Get Run Info
        id: get-obj
        env:
          INPUTS_CONTEXT: ${{ toJson(inputs) }}
        run: |
          set -euo pipefail
          export DATE=$(date +%F)
          export RAPIDS_VERSION=${{ inputs.rapids_version }}
          export UCX_PY_VERSION="$(curl -sL https://version.gpuci.io/rapids/${RAPIDS_VERSION})"
          export RAPIDS_BRANCH="branch-${RAPIDS_VERSION}"
          export UCX_PY_BRANCH="branch-${UCX_PY_VERSION}"

          export REPOS=$(echo "${{ inputs.repos }}" | jq -Rc 'split(" ")')

          export PAYLOADS='{}'
          for REPO in $(jq -nr '(env.REPOS|fromjson) | .[]'); do
            export JUST_REPO=${REPO##*/} # removes GH organization
            export BRANCH="${RAPIDS_BRANCH}"

            if [ "${JUST_REPO}" = "ucx-py" ] || [ "${JUST_REPO}" = "ucxx" ]; then
              export BRANCH="${UCX_PY_BRANCH}"
            fi

            if [ "${JUST_REPO}" = "cudf-pandas-integration" ]; then
              export BRANCH="main"
            fi

            SHA=$(gh api -q '.commit.sha' "repos/${REPO}/branches/${BRANCH}")
            export SHA

            export REPO_PAYLOAD=$(
              jq -nc '{
                "branch": env.BRANCH,
                "date": env.DATE,
                "sha": env.SHA
              }'
            )
            PAYLOADS=$(jq -nc '(env.PAYLOADS|fromjson) + {(env.JUST_REPO): (env.REPO_PAYLOAD|fromjson)}')
          done

          OBJ=$(
            jq -nc '{
              "branch": env.RAPIDS_BRANCH,
              "ucx-py-branch": env.UCX_PY_BRANCH,
              "payloads": (env.PAYLOADS|fromjson)
            }'
          )

          echo "OBJ=${OBJ}" | tee --append "${GITHUB_ENV}"
          echo "obj=${OBJ}" >> "${GITHUB_OUTPUT}"
      - name: Print Summary
        env:
          RAPIDS_VERSION: ${{ inputs.rapids_version }}
          RUN_TESTS: ${{ inputs.run_tests }}
        run: |
          set -euo pipefail
          echo "## \`${RAPIDS_VERSION}\` Nightly Run" >> "$GITHUB_STEP_SUMMARY"
          echo "" >> "$GITHUB_STEP_SUMMARY"
          echo "**Run tests**: \`${RUN_TESTS}\`" >> "$GITHUB_STEP_SUMMARY"
          echo "**Run parameters**:" >> "$GITHUB_STEP_SUMMARY"

          echo "\`\`\`json" >> "$GITHUB_STEP_SUMMARY"
          echo "$(jq -n 'env.OBJ|fromjson')" >> "$GITHUB_STEP_SUMMARY"
          echo "\`\`\`" >> "$GITHUB_STEP_SUMMARY"
